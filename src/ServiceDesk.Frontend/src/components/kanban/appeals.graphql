mutation createRequest($title: String!, $text: String!, $clientId: Int!) {
    createRequest(
        requestCreateDto: {
            theme: $title
            text: $text
            developerRepresentativeId: null
            softwareModuleId: null
            clientId: $clientId
        }
    ) {
        id
    }
}

mutation editRequest($id: Uuid!, $theme: String!, $text: String!, $clientId: Int!) {
    editRequest(
        id: $id
        requestCreateDto: {
            theme: $theme
            text: $text
            clientId: $clientId
            developerRepresentativeId: null
            softwareModuleId: null
        }
    ) {
        id
    }
}

mutation deleteRequest($id: Uuid!) {
    deleteRequest(id: $id)
}

query getCustomerRequests($customerId: Int!) {
    clientRequests(clientId: $customerId) {
        id
        theme
        text
        requestStatus
        software
        creationDate
    }
}

query requestBoards {
    requestBoards {
        name
        items {
            id
            theme
            software
            clientName
        }
    }
}

query getRequest($id: Uuid!) {
    request(requestId: $id) {
        id
        theme
        text
        creationDate
        processingDate
        developerRepresentativeId
        authorId
        software
        softwareModule
        requestStatus
        clientId
    }
}

query getAppealComments($requestId: Uuid!) {
    requestComments(requestId: $requestId) {
        id
        text
        authorId
        creationDate
    }
}

query getRequestAttachments($requestId: Uuid!) {
    requestAttachments(requestId: $requestId) {
        id
        name
        sizeMb
        reference
    }
}

mutation attach($id: Uuid!, $file: Upload!) {
    createRequestAttachment(requestAttachmentCreateDto: { requestId: $id, file: $file }) {
        id
        name
        sizeMb
        reference
    }
}

mutation deleteAttach($attachId: Int!) {
    deleteRequestAttachment(requestAttachmentId: $attachId)
}

mutation createComment($text: String!, $appealId: Uuid!) {
    createComment(commentCreateDto: { text: $text, requestId: $appealId }) {
        id
    }
}

mutation toNewStatus($id: Uuid!) {
    newRequest(id: $id)
}

mutation toRegistrationStatus($id: Uuid!) {
    registrationRequest(id: $id)
}

mutation toWorkStatus($id: Uuid!) {
    inWorkRequest(id: $id)
}

mutation toClosingStatus($id: Uuid!) {
    closingRequest(id: $id)
}

mutation toRejectStatus($id: Uuid!) {
    rejectRequest(id: $id)
}

mutation toReopenStatus($id: Uuid!) {
    reopenRequest(id: $id)
}
